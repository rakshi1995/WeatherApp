{"ast":null,"code":"import { rectToClientRect, computePosition as computePosition$1 } from '@floating-ui/core';\nexport { arrow, autoPlacement, detectOverflow, flip, hide, inline, limitShift, offset, shift, size } from '@floating-ui/core';\n\nfunction getWindow(node) {\n  var _node$ownerDocument;\n\n  return ((_node$ownerDocument = node.ownerDocument) == null ? void 0 : _node$ownerDocument.defaultView) || window;\n}\n\nfunction getComputedStyle$1(element) {\n  return getWindow(element).getComputedStyle(element);\n}\n\nconst min = Math.min;\nconst max = Math.max;\nconst round = Math.round;\n\nfunction getCssDimensions(element) {\n  const css = getComputedStyle$1(element);\n  let width = parseFloat(css.width);\n  let height = parseFloat(css.height);\n  const offsetWidth = element.offsetWidth;\n  const offsetHeight = element.offsetHeight;\n  const shouldFallback = round(width) !== offsetWidth || round(height) !== offsetHeight;\n\n  if (shouldFallback) {\n    width = offsetWidth;\n    height = offsetHeight;\n  }\n\n  return {\n    width,\n    height,\n    fallback: shouldFallback\n  };\n}\n\nfunction getNodeName(node) {\n  return isNode(node) ? (node.nodeName || '').toLowerCase() : '';\n}\n\nlet uaString;\n\nfunction getUAString() {\n  if (uaString) {\n    return uaString;\n  }\n\n  const uaData = navigator.userAgentData;\n\n  if (uaData && Array.isArray(uaData.brands)) {\n    uaString = uaData.brands.map(item => item.brand + \"/\" + item.version).join(' ');\n    return uaString;\n  }\n\n  return navigator.userAgent;\n}\n\nfunction isHTMLElement(value) {\n  return value instanceof getWindow(value).HTMLElement;\n}\n\nfunction isElement(value) {\n  return value instanceof getWindow(value).Element;\n}\n\nfunction isNode(value) {\n  return value instanceof getWindow(value).Node;\n}\n\nfunction isShadowRoot(node) {\n  // Browsers without `ShadowRoot` support.\n  if (typeof ShadowRoot === 'undefined') {\n    return false;\n  }\n\n  const OwnElement = getWindow(node).ShadowRoot;\n  return node instanceof OwnElement || node instanceof ShadowRoot;\n}\n\nfunction isOverflowElement(element) {\n  const {\n    overflow,\n    overflowX,\n    overflowY,\n    display\n  } = getComputedStyle$1(element);\n  return /auto|scroll|overlay|hidden|clip/.test(overflow + overflowY + overflowX) && !['inline', 'contents'].includes(display);\n}\n\nfunction isTableElement(element) {\n  return ['table', 'td', 'th'].includes(getNodeName(element));\n}\n\nfunction isContainingBlock(element) {\n  // TODO: Try to use feature detection here instead.\n  const isFirefox = /firefox/i.test(getUAString());\n  const css = getComputedStyle$1(element);\n  const backdropFilter = css.backdropFilter || css.WebkitBackdropFilter; // This is non-exhaustive but covers the most common CSS properties that\n  // create a containing block.\n  // https://developer.mozilla.org/en-US/docs/Web/CSS/Containing_block#identifying_the_containing_block\n\n  return css.transform !== 'none' || css.perspective !== 'none' || (backdropFilter ? backdropFilter !== 'none' : false) || isFirefox && css.willChange === 'filter' || isFirefox && (css.filter ? css.filter !== 'none' : false) || ['transform', 'perspective'].some(value => css.willChange.includes(value)) || ['paint', 'layout', 'strict', 'content'].some(value => {\n    // Add type check for old browsers.\n    const contain = css.contain;\n    return contain != null ? contain.includes(value) : false;\n  });\n}\n/**\n * Determines whether or not `.getBoundingClientRect()` is affected by visual\n * viewport offsets. In Safari, the `x`/`y` offsets are values relative to the\n * visual viewport, while in other engines, they are values relative to the\n * layout viewport.\n */\n\n\nfunction isClientRectVisualViewportBased() {\n  // TODO: Try to use feature detection here instead. Feature detection for\n  // this can fail in various ways, making the userAgent check the most\n  // reliable:\n  // • Always-visible scrollbar or not\n  // • Width of <html>\n  // Is Safari.\n  return /^((?!chrome|android).)*safari/i.test(getUAString());\n}\n\nfunction isLastTraversableNode(node) {\n  return ['html', 'body', '#document'].includes(getNodeName(node));\n}\n\nfunction unwrapElement(element) {\n  return !isElement(element) ? element.contextElement : element;\n}\n\nconst FALLBACK_SCALE = {\n  x: 1,\n  y: 1\n};\n\nfunction getScale(element) {\n  const domElement = unwrapElement(element);\n\n  if (!isHTMLElement(domElement)) {\n    return FALLBACK_SCALE;\n  }\n\n  const rect = domElement.getBoundingClientRect();\n  const {\n    width,\n    height,\n    fallback\n  } = getCssDimensions(domElement);\n  let x = (fallback ? round(rect.width) : rect.width) / width;\n  let y = (fallback ? round(rect.height) : rect.height) / height; // 0, NaN, or Infinity should always fallback to 1.\n\n  if (!x || !Number.isFinite(x)) {\n    x = 1;\n  }\n\n  if (!y || !Number.isFinite(y)) {\n    y = 1;\n  }\n\n  return {\n    x,\n    y\n  };\n}\n\nfunction getBoundingClientRect(element, includeScale, isFixedStrategy, offsetParent) {\n  var _win$visualViewport, _win$visualViewport2;\n\n  if (includeScale === void 0) {\n    includeScale = false;\n  }\n\n  if (isFixedStrategy === void 0) {\n    isFixedStrategy = false;\n  }\n\n  const clientRect = element.getBoundingClientRect();\n  const domElement = unwrapElement(element);\n  let scale = FALLBACK_SCALE;\n\n  if (includeScale) {\n    if (offsetParent) {\n      if (isElement(offsetParent)) {\n        scale = getScale(offsetParent);\n      }\n    } else {\n      scale = getScale(element);\n    }\n  }\n\n  const win = domElement ? getWindow(domElement) : window;\n  const addVisualOffsets = isClientRectVisualViewportBased() && isFixedStrategy;\n  let x = (clientRect.left + (addVisualOffsets ? ((_win$visualViewport = win.visualViewport) == null ? void 0 : _win$visualViewport.offsetLeft) || 0 : 0)) / scale.x;\n  let y = (clientRect.top + (addVisualOffsets ? ((_win$visualViewport2 = win.visualViewport) == null ? void 0 : _win$visualViewport2.offsetTop) || 0 : 0)) / scale.y;\n  let width = clientRect.width / scale.x;\n  let height = clientRect.height / scale.y;\n\n  if (domElement) {\n    const win = getWindow(domElement);\n    const offsetWin = offsetParent && isElement(offsetParent) ? getWindow(offsetParent) : offsetParent;\n    let currentIFrame = win.frameElement;\n\n    while (currentIFrame && offsetParent && offsetWin !== win) {\n      const iframeScale = getScale(currentIFrame);\n      const iframeRect = currentIFrame.getBoundingClientRect();\n      const css = getComputedStyle(currentIFrame);\n      iframeRect.x += (currentIFrame.clientLeft + parseFloat(css.paddingLeft)) * iframeScale.x;\n      iframeRect.y += (currentIFrame.clientTop + parseFloat(css.paddingTop)) * iframeScale.y;\n      x *= iframeScale.x;\n      y *= iframeScale.y;\n      width *= iframeScale.x;\n      height *= iframeScale.y;\n      x += iframeRect.x;\n      y += iframeRect.y;\n      currentIFrame = getWindow(currentIFrame).frameElement;\n    }\n  }\n\n  return {\n    width,\n    height,\n    top: y,\n    right: x + width,\n    bottom: y + height,\n    left: x,\n    x,\n    y\n  };\n}\n\nfunction getDocumentElement(node) {\n  return ((isNode(node) ? node.ownerDocument : node.document) || window.document).documentElement;\n}\n\nfunction getNodeScroll(element) {\n  if (isElement(element)) {\n    return {\n      scrollLeft: element.scrollLeft,\n      scrollTop: element.scrollTop\n    };\n  }\n\n  return {\n    scrollLeft: element.pageXOffset,\n    scrollTop: element.pageYOffset\n  };\n}\n\nfunction convertOffsetParentRelativeRectToViewportRelativeRect(_ref) {\n  let {\n    rect,\n    offsetParent,\n    strategy\n  } = _ref;\n  const isOffsetParentAnElement = isHTMLElement(offsetParent);\n  const documentElement = getDocumentElement(offsetParent);\n\n  if (offsetParent === documentElement) {\n    return rect;\n  }\n\n  let scroll = {\n    scrollLeft: 0,\n    scrollTop: 0\n  };\n  let scale = {\n    x: 1,\n    y: 1\n  };\n  const offsets = {\n    x: 0,\n    y: 0\n  };\n\n  if (isOffsetParentAnElement || !isOffsetParentAnElement && strategy !== 'fixed') {\n    if (getNodeName(offsetParent) !== 'body' || isOverflowElement(documentElement)) {\n      scroll = getNodeScroll(offsetParent);\n    }\n\n    if (isHTMLElement(offsetParent)) {\n      const offsetRect = getBoundingClientRect(offsetParent);\n      scale = getScale(offsetParent);\n      offsets.x = offsetRect.x + offsetParent.clientLeft;\n      offsets.y = offsetRect.y + offsetParent.clientTop;\n    }\n  }\n\n  return {\n    width: rect.width * scale.x,\n    height: rect.height * scale.y,\n    x: rect.x * scale.x - scroll.scrollLeft * scale.x + offsets.x,\n    y: rect.y * scale.y - scroll.scrollTop * scale.y + offsets.y\n  };\n}\n\nfunction getWindowScrollBarX(element) {\n  // If <html> has a CSS width greater than the viewport, then this will be\n  // incorrect for RTL.\n  return getBoundingClientRect(getDocumentElement(element)).left + getNodeScroll(element).scrollLeft;\n} // Gets the entire size of the scrollable document area, even extending outside\n// of the `<html>` and `<body>` rect bounds if horizontally scrollable.\n\n\nfunction getDocumentRect(element) {\n  const html = getDocumentElement(element);\n  const scroll = getNodeScroll(element);\n  const body = element.ownerDocument.body;\n  const width = max(html.scrollWidth, html.clientWidth, body.scrollWidth, body.clientWidth);\n  const height = max(html.scrollHeight, html.clientHeight, body.scrollHeight, body.clientHeight);\n  let x = -scroll.scrollLeft + getWindowScrollBarX(element);\n  const y = -scroll.scrollTop;\n\n  if (getComputedStyle$1(body).direction === 'rtl') {\n    x += max(html.clientWidth, body.clientWidth) - width;\n  }\n\n  return {\n    width,\n    height,\n    x,\n    y\n  };\n}\n\nfunction getParentNode(node) {\n  if (getNodeName(node) === 'html') {\n    return node;\n  }\n\n  const result = // Step into the shadow DOM of the parent of a slotted node.\n  node.assignedSlot || // DOM Element detected.\n  node.parentNode || // ShadowRoot detected.\n  isShadowRoot(node) && node.host || // Fallback.\n  getDocumentElement(node);\n  return isShadowRoot(result) ? result.host : result;\n}\n\nfunction getNearestOverflowAncestor(node) {\n  const parentNode = getParentNode(node);\n\n  if (isLastTraversableNode(parentNode)) {\n    // `getParentNode` will never return a `Document` due to the fallback\n    // check, so it's either the <html> or <body> element.\n    return parentNode.ownerDocument.body;\n  }\n\n  if (isHTMLElement(parentNode) && isOverflowElement(parentNode)) {\n    return parentNode;\n  }\n\n  return getNearestOverflowAncestor(parentNode);\n}\n\nfunction getOverflowAncestors(node, list) {\n  var _node$ownerDocument;\n\n  if (list === void 0) {\n    list = [];\n  }\n\n  const scrollableAncestor = getNearestOverflowAncestor(node);\n  const isBody = scrollableAncestor === ((_node$ownerDocument = node.ownerDocument) == null ? void 0 : _node$ownerDocument.body);\n  const win = getWindow(scrollableAncestor);\n\n  if (isBody) {\n    return list.concat(win, win.visualViewport || [], isOverflowElement(scrollableAncestor) ? scrollableAncestor : []);\n  }\n\n  return list.concat(scrollableAncestor, getOverflowAncestors(scrollableAncestor));\n}\n\nfunction getViewportRect(element, strategy) {\n  const win = getWindow(element);\n  const html = getDocumentElement(element);\n  const visualViewport = win.visualViewport;\n  let width = html.clientWidth;\n  let height = html.clientHeight;\n  let x = 0;\n  let y = 0;\n\n  if (visualViewport) {\n    width = visualViewport.width;\n    height = visualViewport.height;\n    const visualViewportBased = isClientRectVisualViewportBased();\n\n    if (!visualViewportBased || visualViewportBased && strategy === 'fixed') {\n      x = visualViewport.offsetLeft;\n      y = visualViewport.offsetTop;\n    }\n  }\n\n  return {\n    width,\n    height,\n    x,\n    y\n  };\n} // Returns the inner client rect, subtracting scrollbars if present.\n\n\nfunction getInnerBoundingClientRect(element, strategy) {\n  const clientRect = getBoundingClientRect(element, true, strategy === 'fixed');\n  const top = clientRect.top + element.clientTop;\n  const left = clientRect.left + element.clientLeft;\n  const scale = isHTMLElement(element) ? getScale(element) : {\n    x: 1,\n    y: 1\n  };\n  const width = element.clientWidth * scale.x;\n  const height = element.clientHeight * scale.y;\n  const x = left * scale.x;\n  const y = top * scale.y;\n  return {\n    width,\n    height,\n    x,\n    y\n  };\n}\n\nfunction getClientRectFromClippingAncestor(element, clippingAncestor, strategy) {\n  let rect;\n\n  if (clippingAncestor === 'viewport') {\n    rect = getViewportRect(element, strategy);\n  } else if (clippingAncestor === 'document') {\n    rect = getDocumentRect(getDocumentElement(element));\n  } else if (isElement(clippingAncestor)) {\n    rect = getInnerBoundingClientRect(clippingAncestor, strategy);\n  } else {\n    const mutableRect = { ...clippingAncestor\n    };\n\n    if (isClientRectVisualViewportBased()) {\n      var _win$visualViewport, _win$visualViewport2;\n\n      const win = getWindow(element);\n      mutableRect.x -= ((_win$visualViewport = win.visualViewport) == null ? void 0 : _win$visualViewport.offsetLeft) || 0;\n      mutableRect.y -= ((_win$visualViewport2 = win.visualViewport) == null ? void 0 : _win$visualViewport2.offsetTop) || 0;\n    }\n\n    rect = mutableRect;\n  }\n\n  return rectToClientRect(rect);\n} // A \"clipping ancestor\" is an `overflow` element with the characteristic of\n// clipping (or hiding) child elements. This returns all clipping ancestors\n// of the given element up the tree.\n\n\nfunction getClippingElementAncestors(element, cache) {\n  const cachedResult = cache.get(element);\n\n  if (cachedResult) {\n    return cachedResult;\n  }\n\n  let result = getOverflowAncestors(element).filter(el => isElement(el) && getNodeName(el) !== 'body');\n  let currentContainingBlockComputedStyle = null;\n  const elementIsFixed = getComputedStyle$1(element).position === 'fixed';\n  let currentNode = elementIsFixed ? getParentNode(element) : element; // https://developer.mozilla.org/en-US/docs/Web/CSS/Containing_block#identifying_the_containing_block\n\n  while (isElement(currentNode) && !isLastTraversableNode(currentNode)) {\n    const computedStyle = getComputedStyle$1(currentNode);\n    const containingBlock = isContainingBlock(currentNode);\n    const shouldDropCurrentNode = elementIsFixed ? !containingBlock && !currentContainingBlockComputedStyle : !containingBlock && computedStyle.position === 'static' && !!currentContainingBlockComputedStyle && ['absolute', 'fixed'].includes(currentContainingBlockComputedStyle.position);\n\n    if (shouldDropCurrentNode) {\n      // Drop non-containing blocks.\n      result = result.filter(ancestor => ancestor !== currentNode);\n    } else {\n      // Record last containing block for next iteration.\n      currentContainingBlockComputedStyle = computedStyle;\n    }\n\n    currentNode = getParentNode(currentNode);\n  }\n\n  cache.set(element, result);\n  return result;\n} // Gets the maximum area that the element is visible in due to any number of\n// clipping ancestors.\n\n\nfunction getClippingRect(_ref) {\n  let {\n    element,\n    boundary,\n    rootBoundary,\n    strategy\n  } = _ref;\n  const elementClippingAncestors = boundary === 'clippingAncestors' ? getClippingElementAncestors(element, this._c) : [].concat(boundary);\n  const clippingAncestors = [...elementClippingAncestors, rootBoundary];\n  const firstClippingAncestor = clippingAncestors[0];\n  const clippingRect = clippingAncestors.reduce((accRect, clippingAncestor) => {\n    const rect = getClientRectFromClippingAncestor(element, clippingAncestor, strategy);\n    accRect.top = max(rect.top, accRect.top);\n    accRect.right = min(rect.right, accRect.right);\n    accRect.bottom = min(rect.bottom, accRect.bottom);\n    accRect.left = max(rect.left, accRect.left);\n    return accRect;\n  }, getClientRectFromClippingAncestor(element, firstClippingAncestor, strategy));\n  return {\n    width: clippingRect.right - clippingRect.left,\n    height: clippingRect.bottom - clippingRect.top,\n    x: clippingRect.left,\n    y: clippingRect.top\n  };\n}\n\nfunction getDimensions(element) {\n  if (isHTMLElement(element)) {\n    return getCssDimensions(element);\n  }\n\n  return element.getBoundingClientRect();\n}\n\nfunction getTrueOffsetParent(element, polyfill) {\n  if (!isHTMLElement(element) || getComputedStyle$1(element).position === 'fixed') {\n    return null;\n  }\n\n  if (polyfill) {\n    return polyfill(element);\n  }\n\n  return element.offsetParent;\n}\n\nfunction getContainingBlock(element) {\n  let currentNode = getParentNode(element);\n\n  while (isHTMLElement(currentNode) && !isLastTraversableNode(currentNode)) {\n    if (isContainingBlock(currentNode)) {\n      return currentNode;\n    } else {\n      currentNode = getParentNode(currentNode);\n    }\n  }\n\n  return null;\n} // Gets the closest ancestor positioned element. Handles some edge cases,\n// such as table ancestors and cross browser bugs.\n\n\nfunction getOffsetParent(element, polyfill) {\n  const window = getWindow(element);\n  let offsetParent = getTrueOffsetParent(element, polyfill);\n\n  while (offsetParent && isTableElement(offsetParent) && getComputedStyle$1(offsetParent).position === 'static') {\n    offsetParent = getTrueOffsetParent(offsetParent, polyfill);\n  }\n\n  if (offsetParent && (getNodeName(offsetParent) === 'html' || getNodeName(offsetParent) === 'body' && getComputedStyle$1(offsetParent).position === 'static' && !isContainingBlock(offsetParent))) {\n    return window;\n  }\n\n  return offsetParent || getContainingBlock(element) || window;\n}\n\nfunction getRectRelativeToOffsetParent(element, offsetParent, strategy) {\n  const isOffsetParentAnElement = isHTMLElement(offsetParent);\n  const documentElement = getDocumentElement(offsetParent);\n  const rect = getBoundingClientRect(element, true, strategy === 'fixed', offsetParent);\n  let scroll = {\n    scrollLeft: 0,\n    scrollTop: 0\n  };\n  const offsets = {\n    x: 0,\n    y: 0\n  };\n\n  if (isOffsetParentAnElement || !isOffsetParentAnElement && strategy !== 'fixed') {\n    if (getNodeName(offsetParent) !== 'body' || isOverflowElement(documentElement)) {\n      scroll = getNodeScroll(offsetParent);\n    }\n\n    if (isHTMLElement(offsetParent)) {\n      const offsetRect = getBoundingClientRect(offsetParent, true);\n      offsets.x = offsetRect.x + offsetParent.clientLeft;\n      offsets.y = offsetRect.y + offsetParent.clientTop;\n    } else if (documentElement) {\n      offsets.x = getWindowScrollBarX(documentElement);\n    }\n  }\n\n  return {\n    x: rect.left + scroll.scrollLeft - offsets.x,\n    y: rect.top + scroll.scrollTop - offsets.y,\n    width: rect.width,\n    height: rect.height\n  };\n}\n\nconst platform = {\n  getClippingRect,\n  convertOffsetParentRelativeRectToViewportRelativeRect,\n  isElement,\n  getDimensions,\n  getOffsetParent,\n  getDocumentElement,\n  getScale,\n\n  async getElementRects(_ref) {\n    let {\n      reference,\n      floating,\n      strategy\n    } = _ref;\n    const getOffsetParentFn = this.getOffsetParent || getOffsetParent;\n    const getDimensionsFn = this.getDimensions;\n    return {\n      reference: getRectRelativeToOffsetParent(reference, await getOffsetParentFn(floating), strategy),\n      floating: {\n        x: 0,\n        y: 0,\n        ...(await getDimensionsFn(floating))\n      }\n    };\n  },\n\n  getClientRects: element => Array.from(element.getClientRects()),\n  isRTL: element => getComputedStyle$1(element).direction === 'rtl'\n};\n/**\n * Automatically updates the position of the floating element when necessary.\n * @see https://floating-ui.com/docs/autoUpdate\n */\n\nfunction autoUpdate(reference, floating, update, options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  const {\n    ancestorScroll: _ancestorScroll = true,\n    ancestorResize = true,\n    elementResize = true,\n    animationFrame = false\n  } = options;\n  const ancestorScroll = _ancestorScroll && !animationFrame;\n  const ancestors = ancestorScroll || ancestorResize ? [...(isElement(reference) ? getOverflowAncestors(reference) : reference.contextElement ? getOverflowAncestors(reference.contextElement) : []), ...getOverflowAncestors(floating)] : [];\n  ancestors.forEach(ancestor => {\n    ancestorScroll && ancestor.addEventListener('scroll', update, {\n      passive: true\n    });\n    ancestorResize && ancestor.addEventListener('resize', update);\n  });\n  let observer = null;\n\n  if (elementResize) {\n    let initialUpdate = true;\n    observer = new ResizeObserver(() => {\n      if (!initialUpdate) {\n        update();\n      }\n\n      initialUpdate = false;\n    });\n    isElement(reference) && !animationFrame && observer.observe(reference);\n\n    if (!isElement(reference) && reference.contextElement && !animationFrame) {\n      observer.observe(reference.contextElement);\n    }\n\n    observer.observe(floating);\n  }\n\n  let frameId;\n  let prevRefRect = animationFrame ? getBoundingClientRect(reference) : null;\n\n  if (animationFrame) {\n    frameLoop();\n  }\n\n  function frameLoop() {\n    const nextRefRect = getBoundingClientRect(reference);\n\n    if (prevRefRect && (nextRefRect.x !== prevRefRect.x || nextRefRect.y !== prevRefRect.y || nextRefRect.width !== prevRefRect.width || nextRefRect.height !== prevRefRect.height)) {\n      update();\n    }\n\n    prevRefRect = nextRefRect;\n    frameId = requestAnimationFrame(frameLoop);\n  }\n\n  update();\n  return () => {\n    var _observer;\n\n    ancestors.forEach(ancestor => {\n      ancestorScroll && ancestor.removeEventListener('scroll', update);\n      ancestorResize && ancestor.removeEventListener('resize', update);\n    });\n    (_observer = observer) == null ? void 0 : _observer.disconnect();\n    observer = null;\n\n    if (animationFrame) {\n      cancelAnimationFrame(frameId);\n    }\n  };\n}\n/**\n * Computes the `x` and `y` coordinates that will place the floating element\n * next to a reference element when it is given a certain CSS positioning\n * strategy.\n */\n\n\nconst computePosition = (reference, floating, options) => {\n  // This caches the expensive `getClippingElementAncestors` function so that\n  // multiple lifecycle resets re-use the same result. It only lives for a\n  // single call. If other functions become expensive, we can add them as well.\n  const cache = new Map();\n  const mergedOptions = {\n    platform,\n    ...options\n  };\n  const platformWithCache = { ...mergedOptions.platform,\n    _c: cache\n  };\n  return computePosition$1(reference, floating, { ...mergedOptions,\n    platform: platformWithCache\n  });\n};\n\nexport { autoUpdate, computePosition, getOverflowAncestors, platform };","map":{"version":3,"names":["rectToClientRect","computePosition","computePosition$1","arrow","autoPlacement","detectOverflow","flip","hide","inline","limitShift","offset","shift","size","getWindow","node","_node$ownerDocument","ownerDocument","defaultView","window","getComputedStyle$1","element","getComputedStyle","min","Math","max","round","getCssDimensions","css","width","parseFloat","height","offsetWidth","offsetHeight","shouldFallback","fallback","getNodeName","isNode","nodeName","toLowerCase","uaString","getUAString","uaData","navigator","userAgentData","Array","isArray","brands","map","item","brand","version","join","userAgent","isHTMLElement","value","HTMLElement","isElement","Element","Node","isShadowRoot","ShadowRoot","OwnElement","isOverflowElement","overflow","overflowX","overflowY","display","test","includes","isTableElement","isContainingBlock","isFirefox","backdropFilter","WebkitBackdropFilter","transform","perspective","willChange","filter","some","contain","isClientRectVisualViewportBased","isLastTraversableNode","unwrapElement","contextElement","FALLBACK_SCALE","x","y","getScale","domElement","rect","getBoundingClientRect","Number","isFinite","includeScale","isFixedStrategy","offsetParent","_win$visualViewport","_win$visualViewport2","clientRect","scale","win","addVisualOffsets","left","visualViewport","offsetLeft","top","offsetTop","offsetWin","currentIFrame","frameElement","iframeScale","iframeRect","clientLeft","paddingLeft","clientTop","paddingTop","right","bottom","getDocumentElement","document","documentElement","getNodeScroll","scrollLeft","scrollTop","pageXOffset","pageYOffset","convertOffsetParentRelativeRectToViewportRelativeRect","_ref","strategy","isOffsetParentAnElement","scroll","offsets","offsetRect","getWindowScrollBarX","getDocumentRect","html","body","scrollWidth","clientWidth","scrollHeight","clientHeight","direction","getParentNode","result","assignedSlot","parentNode","host","getNearestOverflowAncestor","getOverflowAncestors","list","scrollableAncestor","isBody","concat","getViewportRect","visualViewportBased","getInnerBoundingClientRect","getClientRectFromClippingAncestor","clippingAncestor","mutableRect","getClippingElementAncestors","cache","cachedResult","get","el","currentContainingBlockComputedStyle","elementIsFixed","position","currentNode","computedStyle","containingBlock","shouldDropCurrentNode","ancestor","set","getClippingRect","boundary","rootBoundary","elementClippingAncestors","_c","clippingAncestors","firstClippingAncestor","clippingRect","reduce","accRect","getDimensions","getTrueOffsetParent","polyfill","getContainingBlock","getOffsetParent","getRectRelativeToOffsetParent","platform","getElementRects","reference","floating","getOffsetParentFn","getDimensionsFn","getClientRects","from","isRTL","autoUpdate","update","options","ancestorScroll","_ancestorScroll","ancestorResize","elementResize","animationFrame","ancestors","forEach","addEventListener","passive","observer","initialUpdate","ResizeObserver","observe","frameId","prevRefRect","frameLoop","nextRefRect","requestAnimationFrame","_observer","removeEventListener","disconnect","cancelAnimationFrame","Map","mergedOptions","platformWithCache"],"sources":["C:/Users/Admin/Documents/react-weather-app/node_modules/@floating-ui/dom/dist/floating-ui.dom.browser.mjs"],"sourcesContent":["import { rectToClientRect, computePosition as computePosition$1 } from '@floating-ui/core';\nexport { arrow, autoPlacement, detectOverflow, flip, hide, inline, limitShift, offset, shift, size } from '@floating-ui/core';\n\nfunction getWindow(node) {\n  var _node$ownerDocument;\n  return ((_node$ownerDocument = node.ownerDocument) == null ? void 0 : _node$ownerDocument.defaultView) || window;\n}\n\nfunction getComputedStyle$1(element) {\n  return getWindow(element).getComputedStyle(element);\n}\n\nconst min = Math.min;\nconst max = Math.max;\nconst round = Math.round;\n\nfunction getCssDimensions(element) {\n  const css = getComputedStyle$1(element);\n  let width = parseFloat(css.width);\n  let height = parseFloat(css.height);\n  const offsetWidth = element.offsetWidth;\n  const offsetHeight = element.offsetHeight;\n  const shouldFallback = round(width) !== offsetWidth || round(height) !== offsetHeight;\n  if (shouldFallback) {\n    width = offsetWidth;\n    height = offsetHeight;\n  }\n  return {\n    width,\n    height,\n    fallback: shouldFallback\n  };\n}\n\nfunction getNodeName(node) {\n  return isNode(node) ? (node.nodeName || '').toLowerCase() : '';\n}\n\nlet uaString;\nfunction getUAString() {\n  if (uaString) {\n    return uaString;\n  }\n  const uaData = navigator.userAgentData;\n  if (uaData && Array.isArray(uaData.brands)) {\n    uaString = uaData.brands.map(item => item.brand + \"/\" + item.version).join(' ');\n    return uaString;\n  }\n  return navigator.userAgent;\n}\n\nfunction isHTMLElement(value) {\n  return value instanceof getWindow(value).HTMLElement;\n}\nfunction isElement(value) {\n  return value instanceof getWindow(value).Element;\n}\nfunction isNode(value) {\n  return value instanceof getWindow(value).Node;\n}\nfunction isShadowRoot(node) {\n  // Browsers without `ShadowRoot` support.\n  if (typeof ShadowRoot === 'undefined') {\n    return false;\n  }\n  const OwnElement = getWindow(node).ShadowRoot;\n  return node instanceof OwnElement || node instanceof ShadowRoot;\n}\nfunction isOverflowElement(element) {\n  const {\n    overflow,\n    overflowX,\n    overflowY,\n    display\n  } = getComputedStyle$1(element);\n  return /auto|scroll|overlay|hidden|clip/.test(overflow + overflowY + overflowX) && !['inline', 'contents'].includes(display);\n}\nfunction isTableElement(element) {\n  return ['table', 'td', 'th'].includes(getNodeName(element));\n}\nfunction isContainingBlock(element) {\n  // TODO: Try to use feature detection here instead.\n  const isFirefox = /firefox/i.test(getUAString());\n  const css = getComputedStyle$1(element);\n  const backdropFilter = css.backdropFilter || css.WebkitBackdropFilter;\n\n  // This is non-exhaustive but covers the most common CSS properties that\n  // create a containing block.\n  // https://developer.mozilla.org/en-US/docs/Web/CSS/Containing_block#identifying_the_containing_block\n  return css.transform !== 'none' || css.perspective !== 'none' || (backdropFilter ? backdropFilter !== 'none' : false) || isFirefox && css.willChange === 'filter' || isFirefox && (css.filter ? css.filter !== 'none' : false) || ['transform', 'perspective'].some(value => css.willChange.includes(value)) || ['paint', 'layout', 'strict', 'content'].some(value => {\n    // Add type check for old browsers.\n    const contain = css.contain;\n    return contain != null ? contain.includes(value) : false;\n  });\n}\n\n/**\n * Determines whether or not `.getBoundingClientRect()` is affected by visual\n * viewport offsets. In Safari, the `x`/`y` offsets are values relative to the\n * visual viewport, while in other engines, they are values relative to the\n * layout viewport.\n */\nfunction isClientRectVisualViewportBased() {\n  // TODO: Try to use feature detection here instead. Feature detection for\n  // this can fail in various ways, making the userAgent check the most\n  // reliable:\n  // • Always-visible scrollbar or not\n  // • Width of <html>\n\n  // Is Safari.\n  return /^((?!chrome|android).)*safari/i.test(getUAString());\n}\nfunction isLastTraversableNode(node) {\n  return ['html', 'body', '#document'].includes(getNodeName(node));\n}\n\nfunction unwrapElement(element) {\n  return !isElement(element) ? element.contextElement : element;\n}\n\nconst FALLBACK_SCALE = {\n  x: 1,\n  y: 1\n};\nfunction getScale(element) {\n  const domElement = unwrapElement(element);\n  if (!isHTMLElement(domElement)) {\n    return FALLBACK_SCALE;\n  }\n  const rect = domElement.getBoundingClientRect();\n  const {\n    width,\n    height,\n    fallback\n  } = getCssDimensions(domElement);\n  let x = (fallback ? round(rect.width) : rect.width) / width;\n  let y = (fallback ? round(rect.height) : rect.height) / height;\n\n  // 0, NaN, or Infinity should always fallback to 1.\n\n  if (!x || !Number.isFinite(x)) {\n    x = 1;\n  }\n  if (!y || !Number.isFinite(y)) {\n    y = 1;\n  }\n  return {\n    x,\n    y\n  };\n}\n\nfunction getBoundingClientRect(element, includeScale, isFixedStrategy, offsetParent) {\n  var _win$visualViewport, _win$visualViewport2;\n  if (includeScale === void 0) {\n    includeScale = false;\n  }\n  if (isFixedStrategy === void 0) {\n    isFixedStrategy = false;\n  }\n  const clientRect = element.getBoundingClientRect();\n  const domElement = unwrapElement(element);\n  let scale = FALLBACK_SCALE;\n  if (includeScale) {\n    if (offsetParent) {\n      if (isElement(offsetParent)) {\n        scale = getScale(offsetParent);\n      }\n    } else {\n      scale = getScale(element);\n    }\n  }\n  const win = domElement ? getWindow(domElement) : window;\n  const addVisualOffsets = isClientRectVisualViewportBased() && isFixedStrategy;\n  let x = (clientRect.left + (addVisualOffsets ? ((_win$visualViewport = win.visualViewport) == null ? void 0 : _win$visualViewport.offsetLeft) || 0 : 0)) / scale.x;\n  let y = (clientRect.top + (addVisualOffsets ? ((_win$visualViewport2 = win.visualViewport) == null ? void 0 : _win$visualViewport2.offsetTop) || 0 : 0)) / scale.y;\n  let width = clientRect.width / scale.x;\n  let height = clientRect.height / scale.y;\n  if (domElement) {\n    const win = getWindow(domElement);\n    const offsetWin = offsetParent && isElement(offsetParent) ? getWindow(offsetParent) : offsetParent;\n    let currentIFrame = win.frameElement;\n    while (currentIFrame && offsetParent && offsetWin !== win) {\n      const iframeScale = getScale(currentIFrame);\n      const iframeRect = currentIFrame.getBoundingClientRect();\n      const css = getComputedStyle(currentIFrame);\n      iframeRect.x += (currentIFrame.clientLeft + parseFloat(css.paddingLeft)) * iframeScale.x;\n      iframeRect.y += (currentIFrame.clientTop + parseFloat(css.paddingTop)) * iframeScale.y;\n      x *= iframeScale.x;\n      y *= iframeScale.y;\n      width *= iframeScale.x;\n      height *= iframeScale.y;\n      x += iframeRect.x;\n      y += iframeRect.y;\n      currentIFrame = getWindow(currentIFrame).frameElement;\n    }\n  }\n  return {\n    width,\n    height,\n    top: y,\n    right: x + width,\n    bottom: y + height,\n    left: x,\n    x,\n    y\n  };\n}\n\nfunction getDocumentElement(node) {\n  return ((isNode(node) ? node.ownerDocument : node.document) || window.document).documentElement;\n}\n\nfunction getNodeScroll(element) {\n  if (isElement(element)) {\n    return {\n      scrollLeft: element.scrollLeft,\n      scrollTop: element.scrollTop\n    };\n  }\n  return {\n    scrollLeft: element.pageXOffset,\n    scrollTop: element.pageYOffset\n  };\n}\n\nfunction convertOffsetParentRelativeRectToViewportRelativeRect(_ref) {\n  let {\n    rect,\n    offsetParent,\n    strategy\n  } = _ref;\n  const isOffsetParentAnElement = isHTMLElement(offsetParent);\n  const documentElement = getDocumentElement(offsetParent);\n  if (offsetParent === documentElement) {\n    return rect;\n  }\n  let scroll = {\n    scrollLeft: 0,\n    scrollTop: 0\n  };\n  let scale = {\n    x: 1,\n    y: 1\n  };\n  const offsets = {\n    x: 0,\n    y: 0\n  };\n  if (isOffsetParentAnElement || !isOffsetParentAnElement && strategy !== 'fixed') {\n    if (getNodeName(offsetParent) !== 'body' || isOverflowElement(documentElement)) {\n      scroll = getNodeScroll(offsetParent);\n    }\n    if (isHTMLElement(offsetParent)) {\n      const offsetRect = getBoundingClientRect(offsetParent);\n      scale = getScale(offsetParent);\n      offsets.x = offsetRect.x + offsetParent.clientLeft;\n      offsets.y = offsetRect.y + offsetParent.clientTop;\n    }\n  }\n  return {\n    width: rect.width * scale.x,\n    height: rect.height * scale.y,\n    x: rect.x * scale.x - scroll.scrollLeft * scale.x + offsets.x,\n    y: rect.y * scale.y - scroll.scrollTop * scale.y + offsets.y\n  };\n}\n\nfunction getWindowScrollBarX(element) {\n  // If <html> has a CSS width greater than the viewport, then this will be\n  // incorrect for RTL.\n  return getBoundingClientRect(getDocumentElement(element)).left + getNodeScroll(element).scrollLeft;\n}\n\n// Gets the entire size of the scrollable document area, even extending outside\n// of the `<html>` and `<body>` rect bounds if horizontally scrollable.\nfunction getDocumentRect(element) {\n  const html = getDocumentElement(element);\n  const scroll = getNodeScroll(element);\n  const body = element.ownerDocument.body;\n  const width = max(html.scrollWidth, html.clientWidth, body.scrollWidth, body.clientWidth);\n  const height = max(html.scrollHeight, html.clientHeight, body.scrollHeight, body.clientHeight);\n  let x = -scroll.scrollLeft + getWindowScrollBarX(element);\n  const y = -scroll.scrollTop;\n  if (getComputedStyle$1(body).direction === 'rtl') {\n    x += max(html.clientWidth, body.clientWidth) - width;\n  }\n  return {\n    width,\n    height,\n    x,\n    y\n  };\n}\n\nfunction getParentNode(node) {\n  if (getNodeName(node) === 'html') {\n    return node;\n  }\n  const result =\n  // Step into the shadow DOM of the parent of a slotted node.\n  node.assignedSlot ||\n  // DOM Element detected.\n  node.parentNode ||\n  // ShadowRoot detected.\n  isShadowRoot(node) && node.host ||\n  // Fallback.\n  getDocumentElement(node);\n  return isShadowRoot(result) ? result.host : result;\n}\n\nfunction getNearestOverflowAncestor(node) {\n  const parentNode = getParentNode(node);\n  if (isLastTraversableNode(parentNode)) {\n    // `getParentNode` will never return a `Document` due to the fallback\n    // check, so it's either the <html> or <body> element.\n    return parentNode.ownerDocument.body;\n  }\n  if (isHTMLElement(parentNode) && isOverflowElement(parentNode)) {\n    return parentNode;\n  }\n  return getNearestOverflowAncestor(parentNode);\n}\n\nfunction getOverflowAncestors(node, list) {\n  var _node$ownerDocument;\n  if (list === void 0) {\n    list = [];\n  }\n  const scrollableAncestor = getNearestOverflowAncestor(node);\n  const isBody = scrollableAncestor === ((_node$ownerDocument = node.ownerDocument) == null ? void 0 : _node$ownerDocument.body);\n  const win = getWindow(scrollableAncestor);\n  if (isBody) {\n    return list.concat(win, win.visualViewport || [], isOverflowElement(scrollableAncestor) ? scrollableAncestor : []);\n  }\n  return list.concat(scrollableAncestor, getOverflowAncestors(scrollableAncestor));\n}\n\nfunction getViewportRect(element, strategy) {\n  const win = getWindow(element);\n  const html = getDocumentElement(element);\n  const visualViewport = win.visualViewport;\n  let width = html.clientWidth;\n  let height = html.clientHeight;\n  let x = 0;\n  let y = 0;\n  if (visualViewport) {\n    width = visualViewport.width;\n    height = visualViewport.height;\n    const visualViewportBased = isClientRectVisualViewportBased();\n    if (!visualViewportBased || visualViewportBased && strategy === 'fixed') {\n      x = visualViewport.offsetLeft;\n      y = visualViewport.offsetTop;\n    }\n  }\n  return {\n    width,\n    height,\n    x,\n    y\n  };\n}\n\n// Returns the inner client rect, subtracting scrollbars if present.\nfunction getInnerBoundingClientRect(element, strategy) {\n  const clientRect = getBoundingClientRect(element, true, strategy === 'fixed');\n  const top = clientRect.top + element.clientTop;\n  const left = clientRect.left + element.clientLeft;\n  const scale = isHTMLElement(element) ? getScale(element) : {\n    x: 1,\n    y: 1\n  };\n  const width = element.clientWidth * scale.x;\n  const height = element.clientHeight * scale.y;\n  const x = left * scale.x;\n  const y = top * scale.y;\n  return {\n    width,\n    height,\n    x,\n    y\n  };\n}\nfunction getClientRectFromClippingAncestor(element, clippingAncestor, strategy) {\n  let rect;\n  if (clippingAncestor === 'viewport') {\n    rect = getViewportRect(element, strategy);\n  } else if (clippingAncestor === 'document') {\n    rect = getDocumentRect(getDocumentElement(element));\n  } else if (isElement(clippingAncestor)) {\n    rect = getInnerBoundingClientRect(clippingAncestor, strategy);\n  } else {\n    const mutableRect = {\n      ...clippingAncestor\n    };\n    if (isClientRectVisualViewportBased()) {\n      var _win$visualViewport, _win$visualViewport2;\n      const win = getWindow(element);\n      mutableRect.x -= ((_win$visualViewport = win.visualViewport) == null ? void 0 : _win$visualViewport.offsetLeft) || 0;\n      mutableRect.y -= ((_win$visualViewport2 = win.visualViewport) == null ? void 0 : _win$visualViewport2.offsetTop) || 0;\n    }\n    rect = mutableRect;\n  }\n  return rectToClientRect(rect);\n}\n\n// A \"clipping ancestor\" is an `overflow` element with the characteristic of\n// clipping (or hiding) child elements. This returns all clipping ancestors\n// of the given element up the tree.\nfunction getClippingElementAncestors(element, cache) {\n  const cachedResult = cache.get(element);\n  if (cachedResult) {\n    return cachedResult;\n  }\n  let result = getOverflowAncestors(element).filter(el => isElement(el) && getNodeName(el) !== 'body');\n  let currentContainingBlockComputedStyle = null;\n  const elementIsFixed = getComputedStyle$1(element).position === 'fixed';\n  let currentNode = elementIsFixed ? getParentNode(element) : element;\n\n  // https://developer.mozilla.org/en-US/docs/Web/CSS/Containing_block#identifying_the_containing_block\n  while (isElement(currentNode) && !isLastTraversableNode(currentNode)) {\n    const computedStyle = getComputedStyle$1(currentNode);\n    const containingBlock = isContainingBlock(currentNode);\n    const shouldDropCurrentNode = elementIsFixed ? !containingBlock && !currentContainingBlockComputedStyle : !containingBlock && computedStyle.position === 'static' && !!currentContainingBlockComputedStyle && ['absolute', 'fixed'].includes(currentContainingBlockComputedStyle.position);\n    if (shouldDropCurrentNode) {\n      // Drop non-containing blocks.\n      result = result.filter(ancestor => ancestor !== currentNode);\n    } else {\n      // Record last containing block for next iteration.\n      currentContainingBlockComputedStyle = computedStyle;\n    }\n    currentNode = getParentNode(currentNode);\n  }\n  cache.set(element, result);\n  return result;\n}\n\n// Gets the maximum area that the element is visible in due to any number of\n// clipping ancestors.\nfunction getClippingRect(_ref) {\n  let {\n    element,\n    boundary,\n    rootBoundary,\n    strategy\n  } = _ref;\n  const elementClippingAncestors = boundary === 'clippingAncestors' ? getClippingElementAncestors(element, this._c) : [].concat(boundary);\n  const clippingAncestors = [...elementClippingAncestors, rootBoundary];\n  const firstClippingAncestor = clippingAncestors[0];\n  const clippingRect = clippingAncestors.reduce((accRect, clippingAncestor) => {\n    const rect = getClientRectFromClippingAncestor(element, clippingAncestor, strategy);\n    accRect.top = max(rect.top, accRect.top);\n    accRect.right = min(rect.right, accRect.right);\n    accRect.bottom = min(rect.bottom, accRect.bottom);\n    accRect.left = max(rect.left, accRect.left);\n    return accRect;\n  }, getClientRectFromClippingAncestor(element, firstClippingAncestor, strategy));\n  return {\n    width: clippingRect.right - clippingRect.left,\n    height: clippingRect.bottom - clippingRect.top,\n    x: clippingRect.left,\n    y: clippingRect.top\n  };\n}\n\nfunction getDimensions(element) {\n  if (isHTMLElement(element)) {\n    return getCssDimensions(element);\n  }\n  return element.getBoundingClientRect();\n}\n\nfunction getTrueOffsetParent(element, polyfill) {\n  if (!isHTMLElement(element) || getComputedStyle$1(element).position === 'fixed') {\n    return null;\n  }\n  if (polyfill) {\n    return polyfill(element);\n  }\n  return element.offsetParent;\n}\nfunction getContainingBlock(element) {\n  let currentNode = getParentNode(element);\n  while (isHTMLElement(currentNode) && !isLastTraversableNode(currentNode)) {\n    if (isContainingBlock(currentNode)) {\n      return currentNode;\n    } else {\n      currentNode = getParentNode(currentNode);\n    }\n  }\n  return null;\n}\n\n// Gets the closest ancestor positioned element. Handles some edge cases,\n// such as table ancestors and cross browser bugs.\nfunction getOffsetParent(element, polyfill) {\n  const window = getWindow(element);\n  let offsetParent = getTrueOffsetParent(element, polyfill);\n  while (offsetParent && isTableElement(offsetParent) && getComputedStyle$1(offsetParent).position === 'static') {\n    offsetParent = getTrueOffsetParent(offsetParent, polyfill);\n  }\n  if (offsetParent && (getNodeName(offsetParent) === 'html' || getNodeName(offsetParent) === 'body' && getComputedStyle$1(offsetParent).position === 'static' && !isContainingBlock(offsetParent))) {\n    return window;\n  }\n  return offsetParent || getContainingBlock(element) || window;\n}\n\nfunction getRectRelativeToOffsetParent(element, offsetParent, strategy) {\n  const isOffsetParentAnElement = isHTMLElement(offsetParent);\n  const documentElement = getDocumentElement(offsetParent);\n  const rect = getBoundingClientRect(element, true, strategy === 'fixed', offsetParent);\n  let scroll = {\n    scrollLeft: 0,\n    scrollTop: 0\n  };\n  const offsets = {\n    x: 0,\n    y: 0\n  };\n  if (isOffsetParentAnElement || !isOffsetParentAnElement && strategy !== 'fixed') {\n    if (getNodeName(offsetParent) !== 'body' || isOverflowElement(documentElement)) {\n      scroll = getNodeScroll(offsetParent);\n    }\n    if (isHTMLElement(offsetParent)) {\n      const offsetRect = getBoundingClientRect(offsetParent, true);\n      offsets.x = offsetRect.x + offsetParent.clientLeft;\n      offsets.y = offsetRect.y + offsetParent.clientTop;\n    } else if (documentElement) {\n      offsets.x = getWindowScrollBarX(documentElement);\n    }\n  }\n  return {\n    x: rect.left + scroll.scrollLeft - offsets.x,\n    y: rect.top + scroll.scrollTop - offsets.y,\n    width: rect.width,\n    height: rect.height\n  };\n}\n\nconst platform = {\n  getClippingRect,\n  convertOffsetParentRelativeRectToViewportRelativeRect,\n  isElement,\n  getDimensions,\n  getOffsetParent,\n  getDocumentElement,\n  getScale,\n  async getElementRects(_ref) {\n    let {\n      reference,\n      floating,\n      strategy\n    } = _ref;\n    const getOffsetParentFn = this.getOffsetParent || getOffsetParent;\n    const getDimensionsFn = this.getDimensions;\n    return {\n      reference: getRectRelativeToOffsetParent(reference, await getOffsetParentFn(floating), strategy),\n      floating: {\n        x: 0,\n        y: 0,\n        ...(await getDimensionsFn(floating))\n      }\n    };\n  },\n  getClientRects: element => Array.from(element.getClientRects()),\n  isRTL: element => getComputedStyle$1(element).direction === 'rtl'\n};\n\n/**\n * Automatically updates the position of the floating element when necessary.\n * @see https://floating-ui.com/docs/autoUpdate\n */\nfunction autoUpdate(reference, floating, update, options) {\n  if (options === void 0) {\n    options = {};\n  }\n  const {\n    ancestorScroll: _ancestorScroll = true,\n    ancestorResize = true,\n    elementResize = true,\n    animationFrame = false\n  } = options;\n  const ancestorScroll = _ancestorScroll && !animationFrame;\n  const ancestors = ancestorScroll || ancestorResize ? [...(isElement(reference) ? getOverflowAncestors(reference) : reference.contextElement ? getOverflowAncestors(reference.contextElement) : []), ...getOverflowAncestors(floating)] : [];\n  ancestors.forEach(ancestor => {\n    ancestorScroll && ancestor.addEventListener('scroll', update, {\n      passive: true\n    });\n    ancestorResize && ancestor.addEventListener('resize', update);\n  });\n  let observer = null;\n  if (elementResize) {\n    let initialUpdate = true;\n    observer = new ResizeObserver(() => {\n      if (!initialUpdate) {\n        update();\n      }\n      initialUpdate = false;\n    });\n    isElement(reference) && !animationFrame && observer.observe(reference);\n    if (!isElement(reference) && reference.contextElement && !animationFrame) {\n      observer.observe(reference.contextElement);\n    }\n    observer.observe(floating);\n  }\n  let frameId;\n  let prevRefRect = animationFrame ? getBoundingClientRect(reference) : null;\n  if (animationFrame) {\n    frameLoop();\n  }\n  function frameLoop() {\n    const nextRefRect = getBoundingClientRect(reference);\n    if (prevRefRect && (nextRefRect.x !== prevRefRect.x || nextRefRect.y !== prevRefRect.y || nextRefRect.width !== prevRefRect.width || nextRefRect.height !== prevRefRect.height)) {\n      update();\n    }\n    prevRefRect = nextRefRect;\n    frameId = requestAnimationFrame(frameLoop);\n  }\n  update();\n  return () => {\n    var _observer;\n    ancestors.forEach(ancestor => {\n      ancestorScroll && ancestor.removeEventListener('scroll', update);\n      ancestorResize && ancestor.removeEventListener('resize', update);\n    });\n    (_observer = observer) == null ? void 0 : _observer.disconnect();\n    observer = null;\n    if (animationFrame) {\n      cancelAnimationFrame(frameId);\n    }\n  };\n}\n\n/**\n * Computes the `x` and `y` coordinates that will place the floating element\n * next to a reference element when it is given a certain CSS positioning\n * strategy.\n */\nconst computePosition = (reference, floating, options) => {\n  // This caches the expensive `getClippingElementAncestors` function so that\n  // multiple lifecycle resets re-use the same result. It only lives for a\n  // single call. If other functions become expensive, we can add them as well.\n  const cache = new Map();\n  const mergedOptions = {\n    platform,\n    ...options\n  };\n  const platformWithCache = {\n    ...mergedOptions.platform,\n    _c: cache\n  };\n  return computePosition$1(reference, floating, {\n    ...mergedOptions,\n    platform: platformWithCache\n  });\n};\n\nexport { autoUpdate, computePosition, getOverflowAncestors, platform };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}